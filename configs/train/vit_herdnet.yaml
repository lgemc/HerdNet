wandb_project: 'camera-traps'
wandb_entity: 'luis-manrique-car-camera-traps'
wandb_run: 'vit-herdnet-train'
seed: 1
device_name: 'cuda'

model: 
  name: 'ViTHerdNet_Base'
  from_torchvision: False
  load_from: null
  resume_from: null
  load_optim: false
  kwargs:
    vit_size: 'base'  # 'small', 'base', 'large'
    img_size: 512
    patch_size: 16
    num_classes: 7
    pretrained: True
    down_ratio: 2
    head_conv: 64
  freeze: null

losses:
  FocalLoss:
    print_name: 'focal_loss'
    from_torch: False
    output_idx: 0
    target_idx: 0
    lambda_const: 1.0
    kwargs:
      reduction: 'mean'
      normalize: False
  CrossEntropyLoss:
    print_name: 'ce_loss'
    from_torch: True
    output_idx: 1
    target_idx: 1
    lambda_const: 1.0
    kwargs:
      reduction: 'mean'
      weight: [0.1,1.2,1.9,1.16,6.37,12.12,1.0]

datasets:
  img_size: [512,512]
  anno_type: 'point'
  num_classes: 7 # Class 0 (background)
  collate_fn: null

  class_def:
    1: 'topi'
    2: 'buffalo'
    3: 'kob'
    4: 'warthog'
    5: 'waterbuck'
    6: 'elephant'
  
  train:
    name: 'CSVDataset'
    csv_file: '/path/to/your/file.csv'
    root_dir: '/path/to/your/images/folder'
    
    sampler: null

    albu_transforms:
      Resize:
        height: 512
        width: 512
        p: 1.0
      HorizontalFlip:
        p: 0.5
      MotionBlur:
        p: 0.5
      Normalize:
        p: 1.0
    
    end_transforms:
      MultiTransformsWrapper:
        FIDT:
          num_classes: ${train.datasets.num_classes}
          down_ratio: ${train.model.kwargs.down_ratio}
        PointsToMask:
          radius: 2
          num_classes: ${train.datasets.num_classes}
          squeeze: True
          down_ratio: 32

  validate:
    name: 'CSVDataset'
    csv_file: '/path/to/your/file.csv'
    root_dir: '/path/to/your/images/folder'

    albu_transforms:
      Resize:
        height: 512
        width: 512
        p: 1.0
      Normalize:
        p: 1.0
    
    end_transforms:
      DownSample:
        down_ratio: ${train.model.kwargs.down_ratio}
        anno_type: ${train.datasets.anno_type}

training_settings:
  trainer: 'Trainer'
  valid_freq: 1
  print_freq: 100
  batch_size: 2  # Reduced batch size due to ViT memory requirements
  val_batch_size: 1
  optimizer: 'adamw'  # AdamW is generally better for transformers
  lr: 3e-4  # Slightly higher learning rate for ViT
  weight_decay: 0.05  # Higher weight decay for transformers
  num_workers:
    train: 16
    eval: 16
  auto_lr:
    mode: 'max'
    patience: 10
    threshold: 1e-4
    threshold_mode: 'rel'
    cooldown: 10
    min_lr: 1e-6
  warmup_iters: 500  # Longer warmup for transformers
  vizual_fn: null
  epochs: 100
  evaluator: 
    name: 'HerdNetEvaluator'
    threshold: 5
    select_mode: 'max'
    validate_on: 'f1_score'
    kwargs:
      print_freq: 10
      lmds_kwargs:
        kernel_size: [3,3]
        adapt_ts: 0.3
  stitcher:
    name: 'HerdNetStitcher'
    kwargs:
      overlap: 0
      down_ratio: ${train.model.kwargs.down_ratio}
      up: False
      reduction: 'mean'